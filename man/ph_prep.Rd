% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ph_prep.R
\name{ph_prep}
\alias{ph_prep}
\title{Preprocessing for phenotype classification via ensemble learning.}
\usage{
ph_prep(
  df,
  ids_col,
  class_col,
  vali_pct = 0.15,
  test_pct = 0.15,
  pca = TRUE,
  pca_pct = 0.95
)
}
\arguments{
\item{df}{A \code{data.frame} containing a column of unique ids, a column of classes, and an arbitrary number of \code{numeric} columns.}

\item{ids_col}{A \code{character} value for the name of the ids column.}

\item{class_col}{A \code{character} value for the name of the class column.}

\item{vali_pct}{A \code{numeric} value for the percentage of training data to use as validation data: 0.15 (default).}

\item{test_pct}{A \code{numeric} value for the percentage of total data to use as test data: 0.15 (default).}

\item{pca}{A \code{logical} value for completing principal component analysis on the dataset to reduce dimensionality: \code{TRUE} (default).}

\item{pca_pct}{A \code{numeric} value for the proportion of variance to subset the PCA with: 0.95 (default).}
}
\value{
A list containing the following components:\tabular{ll}{
\code{train_df} \tab The training set data frame. \cr
\tab \cr
\code{vali_df} \tab The validation set data frame. \cr
\tab \cr
\code{test_df} \tab The test set data frame. \cr
\tab \cr
\code{train_split} \tab The training set indices from the original data frame. \cr
\tab \cr
\code{vali_split} \tab The validation set indices from the original data frame. \cr
\tab \cr
\code{test_split} \tab The test set indices from the original data frame. \cr
\tab \cr
\code{vali_pct} \tab The percentage of training data used as validation data. \cr
\tab \cr
\code{test_pct} \tab The percentage of total data used as test data. \cr
\tab \cr
\code{pca} \tab The training set \code{prcomp} object. \cr
\tab \cr
\code{pca_pct} \tab The proportion of variance used to subset the PCA. \cr
}
}
\description{
The \code{ph_prep} function splits a data frame into training, validation, and test sets, all while ensuring that every class is represented in each dataset. By default, it performs a Principal Component Analysis on the training set data and projects the validation and test data into that space.
}
